# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
#  build:

#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  containerization:
    runs-on: ubuntu-latest
#    needs: [build]
    steps:
      - uses: actions/checkout@v4
      
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{vars.DOCKER_REPOSITORI}}:${{github.sha}}
# Step para verificar la versi√≥n de Maven
      - name: Check Maven version
        run: mvn -version

      # # 5. Login en Azure Container Registry (ACR)
      # - name: Login to Azure Container Registry
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: ${{ secrets.AZURE_ACR_SERVER }}
      #     username: ${{ secrets.AZURE_ACR_USERNAME }}
      #     password: ${{ secrets.AZURE_ACR_PASSWORD }}

      # # 6. Push de la imagen a Azure Container Registry
      # - name: Push Docker image to ACR
      #   run: |
      #     docker tag ${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_REPOSITORI }}:${{ github.sha }} \
      #       ${{ secrets.AZURE_ACR_SERVER }}/${{ vars.DOCKER_REPOSITORI }}:${{ github.sha }}
      #     docker push ${{ secrets.AZURE_ACR_SERVER }}/${{ vars.DOCKER_REPOSITORI }}:${{ github.sha }}
